var searchIndex = JSON.parse('{\
"warg_loader":{"doc":"","t":"DDEEINNNNNNNDDDNDNLLLLLLLLLLLLLLLLMLLLLLLLLLLLMLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLKLLMMLLMLLAMMLLMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLDEDDIEDRRNNNNDDNDDMMMMLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLMMFMMMLLLLMMLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLMMMMMMLMLLLLLLLMMLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLL","n":["Client","Config","ContentHash","Error","IntoVersion","InvalidContentHash","InvalidLabel","InvalidPackageManifest","InvalidPackageRef","IoError","NoRegistryForNamespace","OciError","PackageRef","RegistryConfig","Release","Sha256","Version","VersionError","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","cmp_precedence","compare","content","copy_content","default","default_registry","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_str","from_str","from_str","get_release","hash","hash","into","into","into","into","into","into","into","into","into_version","into_version","list_all_versions","major","minor","name","namespace","namespace_registries","new","new","oci_client","oci_client_config","oci_client_credentials","parse","partial_cmp","patch","pre","registry_configs","source","stream_content","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version","with_default_registry","Certificate","CertificateEncoding","Client","ClientConfig","ClientConfigSource","ClientProtocol","Config","DEFAULT_MAX_CONCURRENT_DOWNLOAD","DEFAULT_MAX_CONCURRENT_UPLOAD","Der","Http","Https","HttpsExcept","ImageData","ImageLayer","Pem","PushResponse","TagResponse","accept_invalid_certificates","accept_invalid_hostnames","annotations","annotations","auth","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client_config","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","config_url","current_platform_resolver","data","data","data","default","default","default","deserialize","digest","encoding","eq","equivalent","equivalent","equivalent","extra_root_certificates","fetch_manifest_digest","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_base64","from_source","into","into","into","into","into","into","into","into","into","into","layers","linux_amd64_resolver","list_tags","manifest","manifest_url","max_concurrent_download","max_concurrent_upload","media_type","media_type","mount_blob","name","new","new","new","oci_v1","oci_v1","oci_v1_from_config_file","oci_v1_gzip","platform_resolver","protocol","pull","pull_blob","pull_blob_stream","pull_image_manifest","pull_manifest","pull_manifest_and_config","push","push_blob","push_manifest","push_manifest_list","push_manifest_raw","sha256_digest","sha256_digest","tags","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":[[0,"warg_loader"],[148,"warg_loader::oci_client"],[319,"core::cmp"],[320,"core::result"],[321,"core::convert"],[322,"futures_io::if_std"],[323,"core::marker"],[324,"core::fmt"],[325,"core::fmt"],[326,"oci_distribution::errors"],[327,"std::io::error"],[328,"core::hash"],[329,"alloc::vec"],[330,"core::option"],[331,"core::error"],[332,"futures_core::stream"],[333,"alloc::string"],[334,"core::any"],[335,"oci_distribution::reference"],[336,"oci_distribution::secrets"],[337,"oci_distribution::token_cache"],[338,"oci_distribution::manifest"],[339,"serde::de"],[340,"jwt::error"],[341,"core::convert"],[342,"oci_distribution::config"],[343,"tokio::io::async_write"],[344,"futures_core::stream"]],"d":["A read-only registry client.","Configuration for <code>Client</code>.","","","","","","","","","","","","Configuration for a specific registry.","","","<strong>SemVer version</strong> as defined by https://semver.org.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compare the major, minor, patch, and pre-release value of …","","","Copies content into the given <code>AsyncWrite</code>.","","The default registry name.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Returns the argument unchanged.","","","","Returns a <code>Release</code> for the given package version.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns a list of all package <code>Version</code>s available for the …","","","","","Per-namespace registry, overriding <code>default_registry</code> (if …","Returns a new client with the given <code>Config</code>.","Create <code>Version</code> with an empty pre-release and build …","Re-exported to ease configuration. OCI distribution client","OCI Distribution client config.","OCI Distribution client credentials (username, password).","Create <code>Version</code> by parsing from string representation.","","","","Per-registry configuration.","","Returns a <code>TryStream</code> of content chunks.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new client with <code>Config::default_registry</code> set to …","A x509 certificate","The encoding of the certificate","The OCI client connects to an OCI registry and fetches OCI …","A client configuration","A source that can provide a <code>ClientConfig</code>. If you are using …","The protocol that the client should use to connect","The data and media type for a configuration object","Default value for <code>ClientConfig::max_concurrent_download</code>","Default value for <code>ClientConfig::max_concurrent_upload</code>","","","","","The data for an image or module.","The data and media type for an image layer","","The data returned by an OCI registry after a successful …","The data returned by a successful tags/list Request","Accept invalid certificates. Defaults to false","Accept invalid hostname. Defaults to false","This OPTIONAL property contains arbitrary metadata for …","This OPTIONAL property contains arbitrary metadata for …","Perform an OAuth v2 auth request if necessary.","","","","","","","","","","","","","","","","","","","","","Provides a <code>ClientConfig</code>.","","","","","","","","","","","","","The Configuration object of the image or module.","Pullable url for the config","A platform resolver that chooses the first variant …","The data of this layer","The data of this config object","Actual certificate","","","","","The digest of the image or module.","Which encoding is used by the certificate","","","","","A list of extra root certificate to trust. This can be …","Fetch a manifest’s digest from the remote OCI …","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Create a new client with the supplied config","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The layers of the image or module.","A platform resolver that chooses the first linux/amd64 …","Fetches the available Tags for the given Reference","The manifest of the image or module.","Pullable url for the manifest","Maximum number of concurrent downloads to perform during a …","Maximum number of concurrent uploads to perform during a …","The media type of this layer","The media type of this object","Mounts a blob to the provided reference, from the given …","Repository Name","Create a new client with the supplied config","Constructs a new ImageLayer struct with provided data and …","Constructs a new Config struct with provided data and …","Constructs a new ImageLayer struct with provided data and …","Constructs a new Config struct with provided data and …","Construct a new Config struct with provided <code>ConfigFile</code> and …","Constructs a new ImageLayer struct with provided data and …","A function that defines the client’s behaviour if an …","Which protocol the client should use","Pull an image and return the bytes","Pull a single layer from an OCI registry.","Stream a single layer from an OCI registry.","Pull a manifest from the remote OCI Distribution service.","Pull a manifest from the remote OCI Distribution service.","Pull a manifest and its config from the remote OCI …","Push an image and return the uploaded URL of the image","Pushes a blob to the registry","Pushes the manifest for a specified image","Push a manifest list to an OCI registry.","Pushes the manifest, provided as raw bytes, for a …","Helper function to compute the sha256 digest of an image …","Helper function to compute the sha256 digest of this …","List of existing Tags","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,8,8,8,8,8,8,8,0,0,0,3,0,8,61,7,1,2,3,13,8,4,61,7,1,2,3,13,8,4,4,1,2,3,4,1,2,3,4,4,4,4,2,7,13,13,1,4,1,1,1,4,4,4,1,1,2,3,3,8,8,4,4,61,7,1,2,3,13,8,8,8,8,4,1,3,4,7,1,4,61,7,1,2,3,13,8,4,22,4,7,4,4,1,1,13,7,4,0,61,61,4,4,4,4,13,8,7,1,2,3,4,1,3,8,4,61,7,1,1,2,3,3,13,8,4,61,7,1,2,3,13,8,4,61,7,1,2,3,13,8,4,2,7,0,0,0,0,0,0,0,0,0,39,41,41,41,0,0,39,0,0,35,35,37,38,31,58,31,35,36,44,37,38,39,40,41,58,31,35,36,44,37,38,39,40,41,50,36,37,38,39,40,41,36,37,38,39,40,41,36,58,0,37,38,40,31,35,41,44,36,40,41,41,41,41,35,31,44,39,40,41,58,31,35,36,44,37,38,39,40,41,44,31,58,31,35,36,44,37,38,39,40,41,36,0,31,36,58,35,35,37,38,31,44,31,37,38,37,38,38,37,35,35,31,31,31,31,31,31,31,31,31,31,31,37,38,44,36,37,38,39,40,41,58,31,31,35,36,44,37,38,39,40,41,58,31,35,36,44,37,38,39,40,41,58,31,35,36,44,37,38,39,40,41],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[1,1],[2,2],[3,3],[4,4],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[4,4],6],[[4,4],6],[[-1,-2],6,[],[]],0,[[7,-1,3,-2],[[9,[5,8]]],[[10,[1]]],[11,12]],[[],13],0,[[1,1],14],[[4,4],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[1,15],16],[[1,15],16],[[2,15],16],[[3,15],16],[[3,15],16],[[8,15],16],[[8,15],16],[[4,15],[[9,[5,17]]]],[[4,15],[[9,[5,17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[18,8],[19,8],[20,8],[-1,-1,[]],[21,[[9,[1]]]],[21,[[9,[3]]]],[21,[[9,[4]]]],[[7,-1,-2],[[9,[2,8]]],[[10,[1]]],22],[[1,-1],5,23],[[4,-1],5,23],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[4,8]]],[]],[4,[[9,[4,8]]]],[[7,-1],[[9,[[24,[4]],8]]],[[10,[1]]]],0,0,0,0,0,[13,7],[[25,25,25],4],0,0,0,[21,[[9,[4,18]]]],[[4,4],[[26,[6]]]],0,0,0,[8,[[26,[27]]]],[[7,-1,3],[[9,[[0,[28]],8]]],[[10,[1]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,29,[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[21,[[9,[1]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[21,[[9,[3]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],0,[29,7],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[31,32,33,34],[[9,[[26,[29]],19]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,35,[]],[36,36],[37,37],[38,38],[39,39],[40,40],[41,41],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],[[-1,-2],5,[],[]],0,0,[[[43,[42]]],[[26,[29]]]],0,0,0,[[],31],[[],35],[[],41],[-1,[[9,[44]]],45],0,0,[[41,41],14],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],[[-1,-2],14,[],[]],0,[[31,32,33],[[9,[29,19]]]],[[44,15],[[9,[5,17]]]],[[39,15],[[9,[5,17]]]],[[40,15],[[9,[5,17]]]],[[41,15],[[9,[5,17]]]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,[[9,[-2,46]]],[[48,[[43,[47]]]],49],[]],[-1,31,50],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[[43,[42]]],[[26,[29]]]],[[31,32,33,[26,[51]],[26,[21]]],[[9,[44,19]]]],0,0,0,0,0,0,[[31,32,32,21],[[9,[5,19]]]],0,[35,31],[[[24,[47]],29,[26,[[52,[29,29]]]]],37],[[[24,[47]],29,[26,[[52,[29,29]]]]],38],[[[24,[47]],[26,[[52,[29,29]]]]],37],[[[24,[47]],[26,[[52,[29,29]]]]],38],[[53,[26,[[52,[29,29]]]]],[[9,[38,19]]]],[[[24,[47]],[26,[[52,[29,29]]]]],37],0,0,[[31,32,33,[24,[21]]],[[9,[36,19]]]],[[31,32,21,-1],[[9,[5,19]]],[54,12]],[[31,32,21],[[9,[[0,[55]],19]]]],[[31,32,33],[[9,[[5,[56,29]],19]]]],[[31,32,33],[[9,[[5,[57,29]],19]]]],[[31,32,33],[[9,[[5,[56,29,29]],19]]]],[[31,32,[43,[37]],38,33,[26,[56]]],[[9,[58,19]]]],[[31,32,[43,[47]],21],[[9,[29,19]]]],[[31,32,57],[[9,[29,19]]]],[[31,32,33,59],[[9,[29,19]]]],[[31,32,[24,[47]],60],[[9,[29,19]]]],[37,29],[38,29],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[35,[[9,[31]]]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,[[9,[-2]]],[],[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]],[-1,30,[]]],"c":[],"p":[[3,"PackageRef",0],[3,"Release",0],[4,"ContentHash",0],[3,"Version",0],[15,"tuple"],[4,"Ordering",319],[3,"Client",0],[4,"Error",0],[4,"Result",320],[8,"TryInto",321],[8,"AsyncWrite",322],[8,"Unpin",323],[3,"Config",0],[15,"bool"],[3,"Formatter",324],[6,"Result",324],[3,"Error",324],[3,"Error",325],[4,"OciDistributionError",326],[3,"Error",327],[15,"str"],[8,"IntoVersion",0],[8,"Hasher",328],[3,"Vec",329],[15,"u64"],[4,"Option",330],[8,"Error",331],[8,"TryStream",332],[3,"String",333],[3,"TypeId",334],[3,"Client",148],[3,"Reference",335],[4,"RegistryAuth",336],[4,"RegistryOperation",337],[3,"ClientConfig",148],[3,"ImageData",148],[3,"ImageLayer",148],[3,"Config",148],[4,"CertificateEncoding",148],[3,"Certificate",148],[4,"ClientProtocol",148],[3,"ImageIndexEntry",338],[15,"slice"],[3,"TagResponse",148],[8,"Deserializer",339],[4,"Error",340],[15,"u8"],[8,"AsRef",321],[8,"Sized",323],[8,"ClientConfigSource",148],[15,"usize"],[3,"HashMap",341],[3,"ConfigFile",342],[8,"AsyncWrite",343],[8,"Stream",332],[3,"OciImageManifest",338],[4,"OciManifest",338],[3,"PushResponse",148],[3,"OciImageIndex",338],[3,"HeaderValue",344],[3,"RegistryConfig",0]],"b":[[58,"impl-Display-for-PackageRef"],[59,"impl-Debug-for-PackageRef"],[61,"impl-Debug-for-ContentHash"],[62,"impl-Display-for-ContentHash"],[63,"impl-Display-for-Error"],[64,"impl-Debug-for-Error"],[65,"impl-Debug-for-Version"],[66,"impl-Display-for-Version"],[74,"impl-From%3CError%3E-for-Error"],[75,"impl-From%3COciDistributionError%3E-for-Error"],[76,"impl-From%3CError%3E-for-Error"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
